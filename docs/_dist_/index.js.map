{
  "version": 3,
  "sources": ["/Users/stojg/Sites/canola/src/index.ts"],
  "sourcesContent": ["import REGL from 'regl'\nimport { createCamera } from './lib/camera'\n\nimport bunny from 'bunny'\nimport plane from './models/plane'\nimport normals from 'angle-normals'\nimport { mat4, vec3 } from 'gl-matrix'\nimport { FPSControls } from './lib/controls'\n\nconst regl = REGL({\n  attributes: {\n    antialias: true,\n  },\n})\n\nconst controls = new FPSControls(regl._gl.canvas as HTMLCanvasElement)\nconst camera = createCamera(regl, controls, {\n  position: vec3.fromValues(0, 10, 50),\n})\n\nconst loadShaders = (fname: string, vname: string) => {\n  const f = fetch(`/shaders/${fname}.fsh`).then((r) => r.text())\n  const v = fetch(`/shaders/${vname}.vsh`).then((r) => r.text())\n  return Promise.all([f, v])\n}\n\nconst createModel = (position: vec3, scale: number): REGL.Mat4 => {\n  const m = mat4.identity(new Float32Array(16))\n  mat4.translate(m, m, position)\n  mat4.scale(m, m, [scale, scale, scale])\n  return m as REGL.Mat4\n}\n\nconst bunnyProps = [\n  {\n    model: createModel(vec3.fromValues(0, 0, 0), 1),\n    color: [0.0, 0.0, 0.8],\n  },\n  {\n    model: createModel(vec3.fromValues(10, 0, 10), 1),\n    color: [0.8, 0.0, 0.0],\n  },\n  {\n    model: createModel(vec3.fromValues(-10, 0, 10), 1),\n    color: [0.8, 0.8, 0.8],\n  },\n  {\n    model: createModel(vec3.fromValues(-5, 0, -10), 1),\n    color: [0.0, 0.8, 0.8],\n  },\n]\n\ninterface MeshUniforms {\n  model: REGL.Mat4\n  color: REGL.Vec3\n  'lights[0].color': REGL.Vec3\n  'lights[0].position': REGL.Vec3\n}\n\ninterface MeshAttributes {\n  position: REGL.Vec3[]\n  normal: REGL.Vec3[]\n}\n\nconst planeDraw = loadShaders('plane', 'plane').then(([f, v]) => {\n  return regl<MeshUniforms, MeshAttributes>({\n    frag: f,\n    vert: v,\n    attributes: {\n      position: plane.positions,\n      normal: plane.normals,\n    },\n    uniforms: {\n      model: () => createModel(vec3.fromValues(0, 0, 0), 200),\n      color: [0.1, 0.1, 0.1],\n      'lights[0].color': [1, 1, 1],\n      'lights[0].position': [10, 10, 10],\n    },\n    elements: plane.cells,\n  })\n})\n\nconst bunnyDraw = loadShaders('main', 'main').then(([f, v]) => {\n  return regl<MeshUniforms, MeshAttributes>({\n    frag: f,\n    vert: v,\n    attributes: {\n      position: bunny.positions,\n      normal: normals(bunny.cells, bunny.positions),\n    },\n    uniforms: {\n      model: regl.prop<MeshUniforms, 'model'>('model'),\n      color: regl.prop<MeshUniforms, 'color'>('color'),\n      'lights[0].color': [1, 1, 1],\n      'lights[0].position': [10, 10, 10],\n    },\n    elements: bunny.cells,\n  })\n})\n\nPromise.all([planeDraw, bunnyDraw]).then((p) => {\n  regl.frame(() => {\n    regl.clear({ color: [0.05, 0.05, 0.05, 1] })\n    camera(() => {\n      p[0]()\n      p[1](bunnyProps)\n    })\n  })\n})\n"],
  "mappings": "AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA,MAAM,QAAO,KAAK;AAAA,EAChB,YAAY;AAAA,IACV,WAAW;AAAA;AAAA;AAIf,kBAAiB,IAAI,YAAY,MAAK,IAAI;AAC1C,gBAAe,aAAa,OAAM,WAAU;AAAA,EAC1C,UAAU,KAAK,WAAW,GAAG,IAAI;AAAA;AAGnC,oBAAoB;AAClB,YAAU,MAAM,YAAY,aAAa,KAAK,OAAO,EAAE;AACvD,YAAU,MAAM,YAAY,aAAa,KAAK,OAAO,EAAE;AACvD,SAAO,QAAQ,IAAI,CAAC,GAAG;AAAA;AAGzB,oBAAoB;AAClB,YAAU,KAAK,SAAS,IAAI,aAAa;AACzC,OAAK,UAAU,GAAG,GAAG;AACrB,OAAK,MAAM,GAAG,GAAG,CAAC,OAAO,OAAO;AAChC,SAAO;AAAA;AAGT,mBAAmB;AAAA,EACjB;AAAA,IACE,OAAO,YAAY,KAAK,WAAW,GAAG,GAAG,IAAI;AAAA,IAC7C,OAAO,CAAC,GAAK,GAAK;AAAA;AAAA,EAEpB;AAAA,IACE,OAAO,YAAY,KAAK,WAAW,IAAI,GAAG,KAAK;AAAA,IAC/C,OAAO,CAAC,KAAK,GAAK;AAAA;AAAA,EAEpB;AAAA,IACE,OAAO,YAAY,KAAK,WAAW,KAAK,GAAG,KAAK;AAAA,IAChD,OAAO,CAAC,KAAK,KAAK;AAAA;AAAA,EAEpB;AAAA,IACE,OAAO,YAAY,KAAK,WAAW,IAAI,GAAG,MAAM;AAAA,IAChD,OAAO,CAAC,GAAK,KAAK;AAAA;AAAA;AAgBtB,kBAAkB,YAAY,SAAS,SAAS,KAAK;AACnD,SAAO,MAAmC;AAAA,IACxC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,YAAY;AAAA,MACV,UAAU,OAAM;AAAA,MAChB,QAAQ,OAAM;AAAA;AAAA,IAEhB,UAAU;AAAA,MACR,OAAO,MAAM,YAAY,KAAK,WAAW,GAAG,GAAG,IAAI;AAAA,MACnD,OAAO,CAAC,KAAK,KAAK;AAAA,MAClB,mBAAmB,CAAC,GAAG,GAAG;AAAA,MAC1B,sBAAsB,CAAC,IAAI,IAAI;AAAA;AAAA,IAEjC,UAAU,OAAM;AAAA;AAAA;AAIpB,kBAAkB,YAAY,QAAQ,QAAQ,KAAK;AACjD,SAAO,MAAmC;AAAA,IACxC,MAAM;AAAA,IACN,MAAM;AAAA,IACN,YAAY;AAAA,MACV,UAAU,OAAM;AAAA,MAChB,QAAQ,QAAQ,OAAM,OAAO,OAAM;AAAA;AAAA,IAErC,UAAU;AAAA,MACR,OAAO,MAAK,KAA4B;AAAA,MACxC,OAAO,MAAK,KAA4B;AAAA,MACxC,mBAAmB,CAAC,GAAG,GAAG;AAAA,MAC1B,sBAAsB,CAAC,IAAI,IAAI;AAAA;AAAA,IAEjC,UAAU,OAAM;AAAA;AAAA;AAIpB,QAAQ,IAAI,CAAC,WAAW,YAAY,KAAK;AACvC,QAAK,MAAM;AACT,UAAK,MAAM,CAAE,OAAO,CAAC,MAAM,MAAM,MAAM;AACvC,YAAO;AACL,QAAE;AACF,QAAE,GAAG;AAAA;AAAA;AAAA;",
  "names": []
}
