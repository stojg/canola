{
  "version": 3,
  "sources": ["/Users/stojg/Sites/canola/src/lib/light.ts"],
  "sourcesContent": ["import { glMatrix, mat4, vec3, vec4 } from 'gl-matrix'\nimport type REGL from 'regl'\nimport deepmerge from 'deepmerge'\nimport { xyz } from './swizzle'\n\nconst POINT_LIGHT_CUBE_MAP_SIZE = 256\n\nexport class Lights {\n  lights: Light[] = []\n\n  push(l: Light) {\n    this.lights.push(l)\n  }\n\n  config(): REGL.DrawConfig {\n    const a: Record<string, any> = {}\n    let pLights = 0\n    this.lights.forEach((l: Light, idx: number) => {\n      if (l instanceof PointLight) {\n        a[`pointLights[${pLights}].intensity`] = l.intensity\n        a[`pointLights[${pLights}].position`] = l.position\n        a[`pointLights[${pLights}].color`] = l.color\n        a[`pointLights[${pLights}].radius`] = l.radius\n        a[`pointLights[${pLights}].invSqrRadius`] = 1.0 / (l.radius * l.radius)\n        pLights++\n      } else if (l instanceof DirectionalLight) {\n        a[`dirLight.intensity`] = l.intensity\n        a[`dirLight.position`] = l.position\n        a[`dirLight.color`] = l.color\n        a[`dirLight.radius`] = l.radius\n        a[`dirLight.invSqrRadius`] = 1.0 / (l.radius * l.radius)\n      }\n    })\n    return { uniforms: a }\n  }\n\n  forEach(callbackfn: (value: Light, index: number, array: Light[]) => void, thisArg?: any): void {\n    this.lights.forEach(callbackfn, thisArg)\n  }\n\n  get(number: number): Light {\n    return this.lights[number]\n  }\n\n  pointLightSetup(pointLightShadows: REGL.DrawCommand[], mainConfig: REGL.DrawConfig, shadowConf: REGL.DrawConfig) {\n    let pLights = 0\n    this.forEach((l, i) => {\n      if (l instanceof PointLight) {\n        if (!mainConfig.uniforms) {\n          mainConfig.uniforms = {}\n        }\n        // @ts-ignore\n        mainConfig.uniforms[`pointLightShadows[${pLights}]`] = l.shadowFBO()\n        pLights++\n        if (l.on) {\n          pointLightShadows.push(l.shadowDraw(shadowConf))\n        }\n      }\n    })\n  }\n\n  dirLightSetup(dirLightShadows: REGL.DrawCommand[], mainConfig: REGL.DrawConfig, dirShadowConf: REGL.DrawConfig) {\n    // todo\n  }\n}\n\nexport class Light {\n  private _radius: number\n  protected _shadowFBO: REGL.Resource\n  public _regl: REGL.Regl\n  protected _intensity: number\n  protected _color: vec3\n  protected _position: vec4\n\n  constructor(regl: REGL.Regl, intensity: number, clr: vec3, pos: vec4, radius?: number, fbo?: REGL.Resource) {\n    this._regl = regl\n    this._intensity = intensity\n    this._color = clr\n    this._position = pos\n    this._radius = radius || 0.0\n    this._shadowFBO = fbo || regl.framebuffer({})\n  }\n\n  get on(): boolean {\n    return this._intensity > 0.001\n  }\n\n  get radius(): number {\n    return this._radius\n  }\n\n  get intensity(): number {\n    return this._intensity\n  }\n\n  get position(): vec4 {\n    return this._position\n  }\n\n  get color(): vec3 {\n    return this._color\n  }\n\n  uniform(): REGL.DrawConfig {\n    return {\n      uniforms: {\n        'light.color': this.color,\n        'light.position': this.position,\n        'light.intensity': this.intensity,\n        'light.radius': this.radius,\n        'light.invSqrRadius': 1 / (this.radius * this.radius),\n      },\n    }\n  }\n\n  shadowDraw(prevConfig: REGL.DrawConfig): REGL.DrawCommand {\n    return this._regl(this.depthDrawConfig(prevConfig))\n  }\n\n  depthDrawConfig(previous: {} = {}) {\n    return previous\n  }\n\n  shadowFBO(): REGL.Resource {\n    return this._shadowFBO\n  }\n}\n\nexport class DirectionalLight extends Light {\n  _shadowFBO: REGL.Framebuffer\n  constructor(regl: REGL.Regl, intensity: number, clr: vec3, pos: vec3) {\n    super(regl, intensity, clr, [pos[0], pos[1], pos[2], 1])\n    this._shadowFBO = regl.framebuffer({\n      radius: POINT_LIGHT_CUBE_MAP_SIZE,\n      colorType: 'half float',\n    })\n  }\n\n  depthDrawConfig(previous: {} = {}) {\n    let near = 1\n    let far = 7.5\n    const proj = mat4.ortho(mat4.create(), -10, 10, -10, 10, near, far)\n    const view = mat4.create()\n    mat4.lookAt(view, [0, 4, 0], [0, 0, 0], [0, 1, 0])\n    return deepmerge(previous, {\n      uniforms: {\n        'light.position': this.position,\n        projectionView: () => {\n          return mat4.mul(mat4.create(), proj, view)\n        },\n      },\n      framebuffer: this._shadowFBO,\n    })\n  }\n}\n\nexport class PointLight extends Light {\n  _shadowFBO: REGL.FramebufferCube\n\n  constructor(regl: REGL.Regl, intensity: number, clr: vec3, pos: vec3, radius: number = 10.0) {\n    super(regl, intensity, clr, [pos[0], pos[1], pos[2], 0], radius)\n    this._shadowFBO = regl.framebufferCube({\n      radius: POINT_LIGHT_CUBE_MAP_SIZE,\n      colorType: 'half float',\n    })\n  }\n\n  depthDrawConfig(previous: {} = {}) {\n    const shadowFbo = this._shadowFBO\n    const proj = mat4.perspective(mat4.create(), glMatrix.toRadian(90), 1, 0.1, this.radius)\n    return deepmerge(previous, {\n      uniforms: {\n        'light.position': this.position,\n        projectionView: (context: REGL.DefaultContext, props: any, batchId: number) => {\n          switch (batchId) {\n            case 0: // +x right\n              return mat4.mul(mat4.create(), proj, mat4.lookAt(mat4.create(), xyz(this.position), vec3.add(vec3.create(), vec3.fromValues(1, 0, 0), xyz(this.position)), [0, -1, 0]))\n            case 1: // -x left\n              return mat4.mul(mat4.create(), proj, mat4.lookAt(mat4.create(), xyz(this.position), vec3.add(vec3.create(), vec3.fromValues(-1, 0, 0), xyz(this.position)), [0, -1, 0]))\n            case 2: // +y top\n              return mat4.mul(mat4.create(), proj, mat4.lookAt(mat4.create(), xyz(this.position), vec3.add(vec3.create(), vec3.fromValues(0, 1, 0), xyz(this.position)), [0, 0, 1]))\n            case 3: // -y bottom\n              return mat4.mul(mat4.create(), proj, mat4.lookAt(mat4.create(), xyz(this.position), vec3.add(vec3.create(), vec3.fromValues(0, -1, 0), xyz(this.position)), [0, 0, -1]))\n            case 4: // +z near\n              return mat4.mul(mat4.create(), proj, mat4.lookAt(mat4.create(), xyz(this.position), vec3.add(vec3.create(), vec3.fromValues(0, 0, 1), xyz(this.position)), [0, -1, 0]))\n            case 5: // -z far\n              return mat4.mul(mat4.create(), proj, mat4.lookAt(mat4.create(), xyz(this.position), vec3.add(vec3.create(), vec3.fromValues(0, 0, -1), xyz(this.position)), [0, -1, 0]))\n          }\n        },\n      },\n      framebuffer: function (context: REGL.DefaultContext, props: {}, batchId: number) {\n        return shadowFbo.faces[batchId]\n      },\n    })\n  }\n}\n"],
  "mappings": "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",
  "names": []
}
