{
  "version": 3,
  "sources": ["/Users/stojg/Sites/canola/src/lib/model.ts"],
  "sourcesContent": ["import { glMatrix, mat4, vec3 } from 'gl-matrix'\nimport type { Material } from './material'\nimport type REGL from 'regl'\nimport type { Controller } from './controller'\nimport { NullController } from './controller'\nimport deepmerge from 'deepmerge'\n\nexport interface ModelUniforms {\n  model: mat4\n  albedo: vec3\n  metallic: number\n  roughness: number\n}\n\nexport type BufferData = [number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number]\n\nexport class Model {\n  private _model: mat4\n  private material: Material\n  private controller: Controller | null\n\n  constructor(mtrl: Material, pos: vec3, scale: number, deg: number = 0, rotAxis: vec3 = [0, 1, 0], ctrl: Controller = new NullController()) {\n    this.material = mtrl\n    this._model = Model.createModel(pos, scale, deg, rotAxis)\n    this.controller = ctrl\n  }\n\n  update() {\n    if (this.controller != null) {\n      this.controller.update(this)\n    }\n  }\n\n  get model(): mat4 {\n    return this._model\n  }\n\n  get bufferData(): BufferData {\n    return [\n      this.model[0],\n      this.model[1],\n      this.model[2],\n      this.model[3],\n      this.model[4],\n      this.model[5],\n      this.model[6],\n      this.model[7],\n      this.model[8],\n      this.model[9],\n      this.model[10],\n      this.model[11],\n      this.model[12],\n      this.model[13],\n      this.model[14],\n      this.model[15],\n      this.albedo[0],\n      this.albedo[1],\n      this.albedo[2],\n      this.metallic,\n      this.roughness,\n    ]\n  }\n\n  set model(value: mat4) {\n    this._model = value\n  }\n\n  get albedo() {\n    return this.material.albedo\n  }\n\n  get metallic() {\n    return this.material.metallic\n  }\n\n  get roughness() {\n    return this.material.roughness\n  }\n\n  static config(prev: REGL.DrawConfig, buf: REGL.Buffer) {\n    return deepmerge(prev, {\n      attributes: {\n        modelA: { buffer: buf, offset: 0, stride: 21 * 4, divisor: 1 },\n        modelB: { buffer: buf, offset: 4 * 4, stride: 21 * 4, divisor: 1 },\n        modelC: { buffer: buf, offset: 8 * 4, stride: 21 * 4, divisor: 1 },\n        modelD: { buffer: buf, offset: 12 * 4, stride: 21 * 4, divisor: 1 },\n        albedo: { buffer: buf, offset: 16 * 4, stride: 21 * 4, divisor: 1 },\n        metallic: { buffer: buf, offset: 19 * 4, stride: 21 * 4, divisor: 1 },\n        roughness: { buffer: buf, offset: 20 * 4, stride: 21 * 4, divisor: 1 },\n      },\n    })\n  }\n\n  static uniforms(regl: REGL.Regl) {\n    return {\n      model: regl.prop<ModelUniforms, 'model'>('model'),\n      albedo: regl.prop<ModelUniforms, 'albedo'>('albedo'),\n      metallic: regl.prop<ModelUniforms, 'metallic'>('metallic'),\n      roughness: regl.prop<ModelUniforms, 'roughness'>('roughness'),\n    }\n  }\n\n  private static createModel(position: vec3, scale: number, deg: number = 0, rotAxis: vec3 = [0, 1, 0]): mat4 {\n    const translation = mat4.identity(new Float32Array(16))\n    mat4.translate(translation, translation, position)\n    mat4.rotate(translation, translation, glMatrix.toRadian(deg), rotAxis)\n    mat4.scale(translation, translation, [scale, scale, scale])\n    return translation\n  }\n}\n"],
  "mappings": "AAAA;AAIA;AACA;AALA;AAAA,EAqBE,YAAY,wBAAwD,aAAmB,CAAC,GAAG,GAAG,WAAuB,IAAI;AACvH,SAAK,WAAW;AAChB,SAAK,SAAS,MAAM,YAAY,KAAK,OAAO,KAAK;AACjD,SAAK,aAAa;AAAA;AAAA,EAGpB;AACE,QAAI,KAAK,cAAc;AACrB,WAAK,WAAW,OAAO;AAAA;AAAA;AAAA,MAIvB;AACF,WAAO,KAAK;AAAA;AAAA,MAGV;AACF,WAAO;AAAA,MACL,KAAK,MAAM;AAAA,MACX,KAAK,MAAM;AAAA,MACX,KAAK,MAAM;AAAA,MACX,KAAK,MAAM;AAAA,MACX,KAAK,MAAM;AAAA,MACX,KAAK,MAAM;AAAA,MACX,KAAK,MAAM;AAAA,MACX,KAAK,MAAM;AAAA,MACX,KAAK,MAAM;AAAA,MACX,KAAK,MAAM;AAAA,MACX,KAAK,MAAM;AAAA,MACX,KAAK,MAAM;AAAA,MACX,KAAK,MAAM;AAAA,MACX,KAAK,MAAM;AAAA,MACX,KAAK,MAAM;AAAA,MACX,KAAK,MAAM;AAAA,MACX,KAAK,OAAO;AAAA,MACZ,KAAK,OAAO;AAAA,MACZ,KAAK,OAAO;AAAA,MACZ,KAAK;AAAA,MACL,KAAK;AAAA;AAAA;AAAA,MAIL;AACF,SAAK,SAAS;AAAA;AAAA,MAGZ;AACF,WAAO,KAAK,SAAS;AAAA;AAAA,MAGnB;AACF,WAAO,KAAK,SAAS;AAAA;AAAA,MAGnB;AACF,WAAO,KAAK,SAAS;AAAA;AAAA,SAGhB;AACL,WAAO,WAAU,MAAM;AAAA,MACrB,YAAY;AAAA,QACV,QAAQ,CAAE,QAAQ,KAAK,QAAQ,GAAG,QAAQ,KAAK,GAAG,SAAS;AAAA,QAC3D,QAAQ,CAAE,QAAQ,KAAK,QAAQ,IAAI,GAAG,QAAQ,KAAK,GAAG,SAAS;AAAA,QAC/D,QAAQ,CAAE,QAAQ,KAAK,QAAQ,IAAI,GAAG,QAAQ,KAAK,GAAG,SAAS;AAAA,QAC/D,QAAQ,CAAE,QAAQ,KAAK,QAAQ,KAAK,GAAG,QAAQ,KAAK,GAAG,SAAS;AAAA,QAChE,QAAQ,CAAE,QAAQ,KAAK,QAAQ,KAAK,GAAG,QAAQ,KAAK,GAAG,SAAS;AAAA,QAChE,UAAU,CAAE,QAAQ,KAAK,QAAQ,KAAK,GAAG,QAAQ,KAAK,GAAG,SAAS;AAAA,QAClE,WAAW,CAAE,QAAQ,KAAK,QAAQ,KAAK,GAAG,QAAQ,KAAK,GAAG,SAAS;AAAA;AAAA;AAAA;AAAA,SAKlE;AACL,WAAO;AAAA,MACL,OAAO,KAAK,KAA6B;AAAA,MACzC,QAAQ,KAAK,KAA8B;AAAA,MAC3C,UAAU,KAAK,KAAgC;AAAA,MAC/C,WAAW,KAAK,KAAiC;AAAA;AAAA;AAAA,SAItC,mCAAyD,aAAmB,CAAC,GAAG,GAAG;AAChG,wBAAoB,KAAK,SAAS,IAAI,aAAa;AACnD,SAAK,UAAU,aAAa,aAAa;AACzC,SAAK,OAAO,aAAa,aAAa,SAAS,SAAS,MAAM;AAC9D,SAAK,MAAM,aAAa,aAAa,CAAC,OAAO,OAAO;AACpD,WAAO;AAAA;AAAA;",
  "names": []
}
