{
  "version": 3,
  "sources": ["/Users/stojg/Sites/canola/src/lib/instanced_mesh.ts"],
  "sourcesContent": ["import type { Mesh } from './mesh'\nimport { Model } from './model'\nimport type REGL from 'regl'\nimport deepmerge from 'deepmerge'\nimport { mat4, vec3 } from 'gl-matrix'\n\nexport class InstancedMesh {\n  private mesh: Mesh\n  models: Model[]\n  private readonly buffer: REGL.Buffer\n  private modelMeshConfig: REGL.DrawConfig<{}, {}, {}, {}, REGL.DefaultContext>\n\n  constructor(regl: REGL.Regl, mesh: Mesh, models: Model[]) {\n    this.mesh = mesh\n    this.models = models\n    this.buffer = regl.buffer({ data: [], type: 'float', length: models.length, usage: 'static' })\n    this.modelMeshConfig = this.mesh.config(Model.config({}, this.buffer))\n    this._updateBuffer()\n  }\n\n  config(prev: {}) {\n    const inst = deepmerge(prev, { instances: this.models.length })\n    return deepmerge(inst, this.modelMeshConfig)\n  }\n\n  update() {\n    this.models.forEach((m) => m.update())\n    this._updateBuffer()\n  }\n\n  private _updateBuffer() {\n    const a: number[][] = []\n    this.models.forEach((model: Model) => {\n      a.push(model.bufferData)\n    })\n    this.buffer({ data: a })\n  }\n\n  sort(fromPosition: vec3) {\n    this.models.sort((a, b): number => {\n      const aPos: vec3 = vec3.create()\n      const bPos: vec3 = vec3.create()\n      mat4.getTranslation(aPos, a.model)\n      mat4.getTranslation(bPos, b.model)\n      return vec3.sqrDist(fromPosition, aPos) - vec3.sqrDist(fromPosition, bPos)\n    })\n  }\n}\n"],
  "mappings": "AACA;AAEA;AACA;AAJA;AAAA,EAYE,YAAY;AACV,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,SAAS,KAAK,OAAO,CAAE,MAAM,IAAI,MAAM,SAAS,QAAQ,OAAO,QAAQ,OAAO;AACnF,SAAK,kBAAkB,KAAK,KAAK,OAAO,MAAM,OAAO,IAAI,KAAK;AAC9D,SAAK;AAAA;AAAA,EAGP;AACE,iBAAa,WAAU,MAAM,CAAE,WAAW,KAAK,OAAO;AACtD,WAAO,WAAU,MAAM,KAAK;AAAA;AAAA,EAG9B;AACE,SAAK,OAAO,QAAQ,OAAO,EAAE;AAC7B,SAAK;AAAA;AAAA,EAGC;AACN,cAAsB;AACtB,SAAK,OAAO,QAAQ;AAClB,QAAE,KAAK,OAAM;AAAA;AAEf,SAAK,OAAO,CAAE,MAAM;AAAA;AAAA,EAGtB;AACE,SAAK,OAAO,KAAK;AACf,mBAAmB,KAAK;AACxB,mBAAmB,KAAK;AACxB,WAAK,eAAe,MAAM,EAAE;AAC5B,WAAK,eAAe,MAAM,EAAE;AAC5B,aAAO,KAAK,QAAQ,cAAc,QAAQ,KAAK,QAAQ,cAAc;AAAA;AAAA;AAAA;",
  "names": []
}
