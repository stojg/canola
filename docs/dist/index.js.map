{
  "version": 3,
  "sources": ["/Users/stojg/Sites/canola/src/index.ts"],
  "sourcesContent": ["import REGL from 'regl'\nimport resl from 'resl'\nimport { createCamera } from './lib/camera'\nimport bunny from 'bunny'\nimport plane from './models/plane'\nimport normals from 'angle-normals'\nimport { glMatrix, mat4, vec3, vec4 } from 'gl-matrix'\nimport { FPSControls } from './lib/controls'\nimport { cube } from './models/cube'\nimport createStatsWidget from 'regl-stats-widget'\nimport { Model, ModelUniforms } from './lib/model'\n\ninterface Assets extends Record<string, string> {}\n\nconst loading = {\n  manifest: {\n    // Each entry in the manifest represents an asset to be loaded\n    'main.fsh': {\n      type: 'text', // the type declares the type of the asset\n      src: 'shaders/main.fsh', // and src declares the URL of the asset\n    },\n    'main.vsh': {\n      type: 'text', // the type declares the type of the asset\n      src: 'shaders/main.vsh', // and src declares the URL of the asset\n    },\n    'pbr.fsh': {\n      type: 'text', // the type declares the type of the asset\n      src: 'shaders/pbr.fsh', // and src declares the URL of the asset\n    },\n    'pbr_shadow.fsh': {\n      type: 'text', // the type declares the type of the asset\n      src: 'shaders/pbr_shadow.fsh', // and src declares the URL of the asset\n    },\n  },\n  onProgress: (progress: any, message: any) => {\n    console.log(progress, message)\n  },\n  onError: (err: Error) => {\n    console.error(err)\n  },\n  onDone: (assets: Assets) => {\n    main(assets)\n  },\n}\n\ninterface MeshAttributes {\n  position: vec3[]\n  normal: vec3[]\n}\n\nresl(loading)\n\nconst main = (assets: Assets) => {\n  const regl = REGL({\n    extensions: ['oes_texture_float', 'ext_disjoint_timer_query'],\n    profile: true,\n    attributes: { antialias: true },\n  })\n\n  const controls = new FPSControls(regl._gl.canvas as HTMLCanvasElement)\n  const camera = createCamera(regl, controls, { position: [0, 3, 10] })\n\n  interface LightUniforms {\n    'lights[0].on': boolean\n    'lights[0].color': vec3\n    'lights[0].position': vec4\n    'lights[1].on': boolean\n    'lights[1].color': vec3\n    'lights[1].position': vec4\n    'lights[2].on': boolean\n    'lights[2].color': vec3\n    'lights[2].position': vec4\n    'lights[3].on': boolean\n    'lights[3].color': vec3\n    'lights[3].position': vec4\n  }\n\n  const lights = [\n    { on: true, color: vec3.fromValues(100, 100, 100), pos: vec4.fromValues(0, 3, 0, 1) },\n    // { on: true, color: vec3.fromValues(100, 100, 100), pos: vec4.fromValues(-3, 3, -3, 1) },\n    { on: false, color: vec3.fromValues(100, 0, 0), pos: vec4.fromValues(3, 3, 3, 1) },\n    { on: false, color: vec3.fromValues(0, 100, 0), pos: vec4.fromValues(-3, 3, 3, 1) },\n    { on: false, color: vec3.fromValues(0, 0, 100), pos: vec4.fromValues(3, 3, -3, 1) },\n  ]\n  const lightProps: any = []\n  for (const i in lights) {\n    if (!lights[i].on) continue\n    lightProps.push(\n      new Model(\n        {\n          albedo: lights[i].color,\n          metallic: 0,\n          roughness: 0.025,\n          ao: 1.0,\n        },\n        [lights[i].pos[0], lights[i].pos[1], lights[i].pos[2]],\n        0.05,\n      ),\n    )\n  }\n\n  const lightScope = regl<LightUniforms>({\n    uniforms: {\n      'lights[0].on': lights[0].on,\n      'lights[0].color': lights[0].color,\n      'lights[0].position': lights[0].pos,\n      'lights[1].on': lights[1].on,\n      'lights[1].color': lights[1].color,\n      'lights[1].position': lights[1].pos,\n      'lights[2].on': lights[2].on,\n      'lights[2].color': lights[2].color,\n      'lights[2].position': lights[2].pos,\n      'lights[3].on': lights[3].on,\n      'lights[3].color': lights[3].color,\n      'lights[3].position': lights[3].pos,\n    },\n  })\n\n  const bunnyProps = [\n    new Model({ albedo: [0.55, 0.55, 0.6], metallic: 0.25, roughness: 0.82, ao: 0.05 }, [0, 0, 0], 0.2, 45),\n    new Model({ albedo: [0.69, 0.27, 0.2], metallic: 0.2, roughness: 0.75, ao: 0.05 }, [4, 0, 4], 0.2, -45),\n    new Model({ albedo: [0.0, 0.5, 0.0], metallic: 0.0, roughness: 0.025, ao: 0.05 }, [-4, 0, 4], 0.2, 90),\n    new Model({ albedo: [0.0, 0.5, 0.9], metallic: 5, roughness: 0.025, ao: 0.05 }, [-2, 0, 4], 0.2, 35),\n    new Model({ albedo: [0.5, 0.5, 0.5], metallic: 5, roughness: 0.025, ao: 0.05 }, [-6, 0, -6], 0.2, 70),\n    new Model({ albedo: [0.5, 0.5, 0.5], metallic: 5, roughness: 0.025, ao: 0.05 }, [4, 0, -6], 0.2, 35),\n    new Model({ albedo: [0.5, 0.5, 0.5], metallic: 5, roughness: 0.025, ao: 0.05 }, [6, 0, -5], 0.2, -43),\n    new Model({ albedo: [0.5, 0.5, 0.5], metallic: 5, roughness: 0.025, ao: 0.05 }, [1, 0, -4], 0.2, -70),\n  ]\n\n  const planeProps = [\n    new Model(\n      {\n        albedo: [0.42, 0.4, 0.38],\n        metallic: 0.69,\n        roughness: 0.08,\n        ao: 0.0,\n      },\n      [0, 0, 0],\n      20,\n      90,\n      [1, 0, 0],\n    ),\n  ]\n\n  const xyz = (t: vec4) => vec3.fromValues(t[0], t[1], t[2])\n\n  const CUBE_MAP_SIZE = 512\n  const shadowFbo = regl.framebufferCube({\n    radius: CUBE_MAP_SIZE,\n    colorType: 'float',\n  })\n  // render point-light shadows into a cubemap\n  const drawDepth = regl({\n    viewport: { x: 0, y: 0, width: CUBE_MAP_SIZE, height: CUBE_MAP_SIZE },\n    uniforms: {\n      projection: mat4.perspective(mat4.create(), glMatrix.toRadian(90), 1, 0.25, 30.0),\n      view: function (context, props, batchId) {\n        switch (batchId) {\n          case 0: // +x right\n            return mat4.lookAt(mat4.create(), xyz(lights[0].pos), vec3.add(vec3.create(), vec3.fromValues(1, 0, 0), xyz(lights[0].pos)), [0, -1, 0])\n          case 1: // -x left\n            return mat4.lookAt(mat4.create(), xyz(lights[0].pos), vec3.add(vec3.create(), vec3.fromValues(-1, 0, 0), xyz(lights[0].pos)), [0, -1, 0])\n          case 2: // +y top\n            return mat4.lookAt(mat4.create(), xyz(lights[0].pos), vec3.add(vec3.create(), vec3.fromValues(0, 1, 0), xyz(lights[0].pos)), [0, 0, 1])\n          case 3: // -y bottom\n            return mat4.lookAt(mat4.create(), xyz(lights[0].pos), vec3.add(vec3.create(), vec3.fromValues(0, -1, 0), xyz(lights[0].pos)), [0, 0, -1])\n          case 4: // +z near\n            return mat4.lookAt(mat4.create(), xyz(lights[0].pos), vec3.add(vec3.create(), vec3.fromValues(0, 0, 1), xyz(lights[0].pos)), [0, -1, 0])\n          case 5: // -z far\n            return mat4.lookAt(mat4.create(), xyz(lights[0].pos), vec3.add(vec3.create(), vec3.fromValues(0, 0, -1), xyz(lights[0].pos)), [0, -1, 0])\n        }\n      },\n    },\n    frag: `\n  precision mediump float;\n  // lights\n  struct Light {\n      vec3 color;\n      vec4 position;\n      bool on;\n  };\n  uniform Light lights[4];\n  varying vec3 vPosition;\n  void main () {\n    gl_FragColor = vec4(vec3(distance(vPosition, lights[0].position.xyz)), 1.0);\n  }`,\n    vert: `\n  precision mediump float;\n  attribute vec3 position;\n\n  varying vec3 vPosition;\n  uniform mat4 projection, view, model;\n  void main() {\n    vec4 p = model * vec4(position, 1.0);\n    vPosition = p.xyz;\n    gl_Position = projection * view * p;\n  }`,\n\n    framebuffer: function (context, props, batchId) {\n      return shadowFbo.faces[batchId]\n    },\n  })\n\n  const planeDraw = regl<ModelUniforms, MeshAttributes>({\n    elements: plane.indices,\n    attributes: { position: plane.positions, normal: plane.normals },\n    uniforms: Model.uniforms(regl),\n  })\n\n  const bunnyDraw = regl<ModelUniforms, MeshAttributes>({\n    elements: bunny.cells,\n    attributes: { position: bunny.positions, normal: normals(bunny.cells, bunny.positions) },\n    uniforms: Model.uniforms(regl),\n  })\n\n  const lightDraw = regl<ModelUniforms, MeshAttributes>({\n    elements: cube.indices,\n    attributes: { position: cube.positions, normal: cube.normals },\n    uniforms: Model.uniforms(regl),\n  })\n\n  const shadowDraw = regl({\n    frag: assets['pbr_shadow.fsh'],\n    vert: assets['main.vsh'],\n    cull: { enable: true, face: 'back' },\n    uniforms: {\n      shadowCube: shadowFbo,\n    },\n  })\n\n  const plainDraw = regl({\n    frag: assets['main.fsh'],\n    vert: assets['main.vsh'],\n    cull: { enable: true, face: 'back' },\n  })\n\n  const statsWidget = createStatsWidget([\n    [planeDraw, 'plane'],\n    [bunnyDraw, 'bunnies'],\n    [lightDraw, 'lights'],\n  ])\n\n  regl.frame(() => {\n    const deltaTime = 0.017\n    statsWidget.update(deltaTime)\n\n    lightScope(() => {\n      drawDepth(6, () => {\n        regl.clear({ depth: 1 })\n        bunnyDraw(bunnyProps)\n        planeDraw(planeProps)\n      })\n    })\n\n    regl.clear({ color: [0.05, 0.05, 0.05, 1] })\n    camera(() => {\n      lightScope(() => {\n        shadowDraw(() => {\n          bunnyDraw(bunnyProps)\n          planeDraw(planeProps)\n        })\n      })\n\n      plainDraw(() => {\n        lightDraw(lightProps)\n      })\n    })\n  })\n}\n"],
  "mappings": "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",
  "names": []
}
